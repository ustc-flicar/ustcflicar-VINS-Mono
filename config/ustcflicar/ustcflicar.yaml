%YAML:1.0

#common parameters
imu_topic: "/imu/data"
image_topic: "/hik_camera/image_raw"
output_path: "/home/wangzm/guiji" # change to your own path

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 1440
image_height: 1080
distortion_parameters:
   k1: -0.0423
   k2: 0.0812
   p1: 0
   p2: 0
projection_parameters:
   fx: 1841.236
   fy: 1840.524
   cx: 727.914
   cy: 545.179

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.01756588, -0.0070348,   0.99982096,
          -0.99962978, -0.02090466,  0.01741543,
          0.02077841, -0.99975672, -0.0073994]
   
#   [ 0.00723699, -0.0241161,   0.99968297,
#           -0.99995591, -0.00615698,  0.00709043,
#           0.00598404, -0.9996902,  -0.0241596]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.04409697, -0.09474854, 0.01833216]   # [0.05073227, -0.09052156, 0.04535453]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.013      # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.003     # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00016          # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-05     # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.80254751   # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/wangzm/guiji" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.005                          # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
#for hik camera, when use night sequence the expose time of camera is 30000us, when it is day time the expose time of camera is 5000us 


#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
